{"version":3,"file":"static/js/134.d06cb180.chunk.js","mappings":"2RAKMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sFAQD,SAASE,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,kBAApB,QAAkC,GACzCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+FACVC,EADU,0DAC+CN,EAD/C,8CAEVO,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NALH,kBAUSC,EAAAA,EAAAA,IAAUL,EAAKC,GAVxB,OAURK,EAVQ,OAWdhB,EAAUgB,EAASC,KAAKC,SAXV,gDAcdC,QAAQC,MAAM,SAAd,MAdc,yDAAH,qDAmBfX,GACD,GAAE,CAACL,IAcJ,OACE,iCACE,kBAAMiB,OAAO,GAAGC,SANC,SAAAC,GACnBA,EAAEC,gBACH,EAIG,WACE,kBAAOC,KAAK,OAAOC,MAAOtB,EAASuB,SAff,SAAAJ,GACxBA,EAAEC,iBACF,IAAMI,EAAeL,EAAEM,OAAOH,MAG1BvB,EADa,KAAjByB,EACoB,CAAC,EACD,CAAExB,QAASwB,GAChC,KASK,mBAAQE,QAAS,kBAAM3B,EAAgB,CAAC4B,MAAO,KAA9B,EAAjB,2BAKF,wBACGhC,EAAOiC,KAAI,SAAAC,GAAK,OACf,yBACE,SAACvC,EAAD,CACEwC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAM/B,GAFjB,SAIG2B,EAAMK,SALFL,EAAME,GADA,QAaxB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &:hover {\n    color: yellowgreen;\n  }\n`;\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieId = searchParams.get('movieId') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${movieId}&include_adult=false&language=en-US&page=1`;\n      const options = {\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ'\n        }\n      };\n\n      try {\n        const response = await axios.get(url, options);\n        setMovies(response.data.results);\n\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n\n    fetchData();\n  }, [movieId]);\n\n  const updateQueryString = e => {\n    e.preventDefault()\n    const movieIdValue = e.target.value;\n\n    movieIdValue === ''\n      ? setSearchParams({})\n      : setSearchParams({ movieId: movieIdValue });\n  };\n  const onSubmitForm = e => {\n    e.preventDefault()\n  }\n\n  return (\n    <>\n      <form action=\"\" onSubmit={onSubmitForm}>\n        <input type=\"text\" value={movieId} onChange={updateQueryString} />\n        <button onClick={() => setSearchParams({query: 'a' })}>\n          Change SP\n        </button>\n      </form>\n  \n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <StyledLink\n              to={`${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.title}\n            </StyledLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieId","get","location","useLocation","useEffect","fetchData","url","options","headers","accept","Authorization","axios","response","data","results","console","error","action","onSubmit","e","preventDefault","type","value","onChange","movieIdValue","target","onClick","query","map","movie","to","id","state","from","title"],"sourceRoot":""}