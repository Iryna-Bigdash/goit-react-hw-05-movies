{"version":3,"file":"static/js/134.6f585fb9.chunk.js","mappings":"2RAKMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6FAQD,SAASE,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MACjB,GAA8CT,EAAAA,EAAAA,WAAS,GAAvD,eAAOU,EAAP,KAAwBC,EAAxB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+FACVC,EADU,0DAC+CR,EAD/C,8CAEVS,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANU,kBAWSC,EAAAA,EAAAA,IAAUL,EAAKC,GAXxB,OAWRK,EAXQ,OAYdlB,EAAUkB,EAASC,KAAKC,SAZV,gDAcdC,QAAQC,MAAM,SAAd,MAdc,yDAAH,qDAkBXd,IACFG,IACAF,GAAmB,GAEtB,GAAE,CAACD,EAAiBJ,IAgBrB,OACE,iCACE,eAAImB,UAAU,0BAAd,yCACA,kBAAMA,UAAU,cAAcC,SARb,SAAAC,GACnBA,EAAEC,iBACFjB,GAAmB,EACpB,EAKG,WACE,gBAAKc,UAAU,WAAf,UACE,kBACEI,KAAK,OACLC,MAAOxB,EACPyB,SAtBgB,SAAAJ,GACxBA,EAAEC,iBACF,IAAMI,EAAaL,EAAEM,OAAOH,MAGxBzB,EADW,KAAf2B,EACoB,CAAC,EACD,CAAE1B,MAAO0B,GAC9B,EAgBSP,UAAU,eACVS,YAAY,4BACZ,aAAW,iCAGf,gBAAKT,UAAU,WAAf,UACE,mBAAQI,KAAK,SAASJ,UAAU,uBAAhC,yBAKHxB,EAAOkC,OAAS,IACf,eAAIV,UAAU,aAAd,UACE,gBAAKA,UAAU,QAAf,SACGxB,EAAOmC,KAAI,SAAAC,GAAK,OACf,eAAmBZ,UAAU,kBAA7B,UACE,SAAC7B,EAAD,CAAY0C,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMjC,GAAYiB,UAAU,kBAApE,SACGY,EAAMK,SAFFL,EAAME,GADA,UAY5B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &:hover {\n    background-color: #edf4fe;\n  }\n`;\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n      const options = {\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ',\n        },\n      };\n\n      try {\n        const response = await axios.get(url, options);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    if (isFormSubmitted) {\n      fetchData();\n      setIsFormSubmitted(false);\n    }\n  }, [isFormSubmitted, query]);\n\n  const updateQueryString = e => {\n    e.preventDefault();\n    const queryValue = e.target.value;\n\n    queryValue === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: queryValue });\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    setIsFormSubmitted(true);\n  };\n\n  return (\n    <>\n      <h2 className=\"mb-1 p-3 fs-3 fw-bolder\">What do you like to watch?</h2>\n      <form className=\"row g-3 p-3\" onSubmit={onSubmitForm}>\n        <div className=\"col-auto\">\n          <input\n            type=\"text\"\n            value={query}\n            onChange={updateQueryString}\n            className=\"form-control\"\n            placeholder=\"Movie title input here...\"\n            aria-label=\"Movie title input example\"\n          />\n        </div>\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-primary mb-3\">\n            Search\n          </button>\n        </div>\n      </form>\n      {movies.length > 0 && (\n        <ul className=\"list-group\">\n          <div className=\"w-100\">\n            {movies.map(movie => (\n              <li key={movie.id} className=\"list-group-item\">\n                <StyledLink to={`${movie.id}`} state={{ from: location }} className=\"list-group-item\">\n                  {movie.title}\n                </StyledLink>\n              </li>\n            ))}\n          </div>\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","isFormSubmitted","setIsFormSubmitted","useEffect","fetchData","url","options","headers","accept","Authorization","axios","response","data","results","console","error","className","onSubmit","e","preventDefault","type","value","onChange","queryValue","target","placeholder","length","map","movie","to","id","state","from","title"],"sourceRoot":""}