{"version":3,"file":"static/js/415.35f69fa2.chunk.js","mappings":"kRAKMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qGAQD,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6GAEOC,EAAAA,EAAAA,IAAU,iEAAkE,CACjGC,QAAS,CACP,OAAU,mBACV,cAAiB,gOALL,OAEVC,EAFU,OAQhBL,EAAUK,EAASC,KAAKC,SARR,gDAWhBC,QAAQC,MAAM,SAAd,MAXgB,yDAAH,qDAejBP,GACD,GAAE,KAGD,4BACE,4CACA,wBACGH,EAAOW,KAAI,SAAAC,GAAK,OACf,yBACE,SAACjB,EAAD,CAAYkB,GAAE,UAAKD,GAAnB,SACGA,EAAME,SAFFF,EAAMG,GADA,QAUxB,C","sources":["pages/Home.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { NavLink } from \"react-router-dom\";\n\nconst StyledLink = styled(NavLink)`\n    color: black;\n\n    &:hover{\n        color: rgb(217, 85, 217);\n    }\n`\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day?language=en-US', {\n          headers: {\n            'accept': 'application/json',\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ'\n          }\n        });\n        setMovies(response.data.results);\n        // console.log(movies)\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`${movie}`}>\n              {movie.title}\n            </StyledLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","Home","useState","movies","setMovies","useEffect","fetchMovies","axios","headers","response","data","results","console","error","map","movie","to","title","id"],"sourceRoot":""}