{"version":3,"file":"static/js/681.d9b64a9c.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,wGAEXC,EAFW,6CAEiCX,EAFjC,kCAGXY,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NARW,SAYMC,EAAAA,EAAAA,IAAUN,EAAKC,GAZrB,OAYXM,EAZW,OAajBd,EAAWc,EAASC,KAAKC,SACzBd,GAAW,GAdM,kDAgBjBE,EAAS,KAAMa,SACff,GAAW,GAjBM,0DAAH,qDAqBlBI,GACD,GAAE,CAACV,IAEAK,GACK,gDAGLE,GACK,qCAAaA,MAIpB,yBACGJ,EAAQmB,OAAS,GAChB,eAAIC,UAAU,yBAAd,SACGpB,EAAQqB,KAAI,SAAAC,GAAM,OACjB,gBAAoBF,UAAU,yCAA9B,WACE,qCAAaE,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,sEAIP,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`;\n        const options = {\n          method: 'GET',\n          headers: {\n            accept: 'application/json',\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ',\n          },\n        };\n\n        const response = await axios.get(url, options);\n        setReviews(response.data.results);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading reviews...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul className=\"list-group w-100 gap-3\">\n          {reviews.map(review => (\n            <li key={review.id} className=\"list-group-item list-group-item-action\">\n              <h4>Author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n}\n\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","useEffect","fetchReviews","url","options","method","headers","accept","Authorization","axios","response","data","results","message","length","className","map","review","author","content","id"],"sourceRoot":""}