{"version":3,"file":"static/js/466.52d616cb.chunk.js","mappings":"mRAMMA,GAAUC,EAAAA,EAAAA,GAAO,MAAPA,CAAH,oIASE,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,wGAERC,EAFQ,6CAEoCX,EAFpC,2BAGRY,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAPQ,SAWSC,EAAAA,EAAAA,IAAUL,EAAKC,GAXxB,OAWRK,EAXQ,OAYdb,EAAQa,EAASC,KAAKf,MACtBG,GAAW,GAbG,kDAedE,EAAS,KAAMW,SACfb,GAAW,GAhBG,0DAAH,qDAoBfI,GACD,GAAE,CAACV,IAEAK,GACK,6CAGLE,GACK,qCAAaA,MAIpB,8BACGJ,EAAKiB,OAAS,GACb,eAAIC,UAAU,0BAAd,SACGlB,EAAKmB,KAAI,SAAAC,GAAK,OACb,gBAAmBF,UAAU,uBAA7B,UACGE,EAAMC,cACL,SAAC3B,EAAD,CACE4B,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAI,cACJC,MAAO,QACPC,OAAQ,WAGV,SAAC/B,EAAD,CACE4B,I,8pHACAC,IAAI,sBACJC,MAAO,QACPC,OAAQ,WAGZ,kCAAUL,EAAMM,SAChB,uCAAeN,EAAMO,eAjBdP,EAAMQ,GADF,OAuBjB,sEAIP,C","sources":["components/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport defaultPhoto from '../servises/images/notFoundFoto.jpeg';\n\nconst CastIMG = styled('img')`\n  object-fit: cover;\n\n  &:hover {\n    transform: scale(1.2);\n    transition: transform 0.3s ease;\n  }\n`;\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`;\n        const options = {\n          headers: {\n            accept: 'application/json',\n            Authorization:\n              'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ',\n          },\n        };\n\n        const response = await axios.get(url, options);\n        setCast(response.data.cast);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading cast...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul className=\"row row-cols-7 bg-light\">\n          {cast.map(actor => (\n            <li key={actor.id} className=\"col list-inline-item\">\n              {actor.profile_path ? (\n                <CastIMG\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt=\"Actor Photo\"\n                  width={'150px'}\n                  height={'200px'}\n                />\n              ) : (\n                <CastIMG\n                  src={defaultPhoto}\n                  alt=\"Default Actor Photo\"\n                  width={'150px'}\n                  height={'200px'}\n                />\n              )}\n              <p>Name: {actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n"],"names":["CastIMG","styled","Cast","movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","useEffect","fetchCast","url","options","headers","accept","Authorization","axios","response","data","message","length","className","map","actor","profile_path","src","alt","width","height","name","character","id"],"sourceRoot":""}