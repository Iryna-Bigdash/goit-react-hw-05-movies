{"version":3,"file":"static/js/134.e9d40c47.chunk.js","mappings":"2RAKMA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,6FAQD,SAASE,IAAU,IAAD,EAC/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAGA,IAAMK,EAAS,mCAAG,+FACVC,EADU,0DAC+CN,EAD/C,8CAEVO,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANU,kBAWSC,EAAAA,EAAAA,IAAUL,EAAKC,GAXxB,OAWRK,EAXQ,OAYdhB,EAAUgB,EAASC,KAAKC,SAZV,gDAcdC,QAAQC,MAAM,SAAd,MAdc,yDAAH,qDAkBfX,GAnBC,CAoBF,GAAE,CAACL,IAWJ,OACE,iCACE,eAAIiB,UAAU,0BAAd,yCACA,kBAAMA,UAAU,cAAcC,SAZb,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,cAAcC,SAASF,YAAYG,MAGrDzB,EADY,KAAhBsB,EACoB,CAAC,EACD,CAAErB,MAAOqB,GAC9B,EAKG,WACE,gBAAKJ,UAAU,WAAf,UACE,kBACEQ,KAAK,OACLC,KAAK,cACLT,UAAU,eACVU,YAAY,4BACZ,aAAW,4BACXC,UAAQ,OAGZ,gBAAKX,UAAU,WAAf,UACE,mBAAQQ,KAAK,SAASR,UAAU,uBAAhC,yBAKHtB,EAAOkC,OAAS,IACf,eAAIZ,UAAU,aAAd,UACE,gBAAKA,UAAU,QAAf,SACGtB,EAAOmC,KAAI,SAAAC,GAAK,OACf,eAAmBd,UAAU,kBAA7B,UACE,SAAC3B,EAAD,CACE0C,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAMjC,GACfe,UAAU,kBAHZ,SAKGc,EAAMK,SANFL,EAAME,GADA,UAgB5B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst StyledLink = styled(NavLink)`\n  color: black;\n\n  &:hover {\n    background-color: #edf4fe;\n  }\n`;\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchData = async () => {\n      const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`;\n      const options = {\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMTQ5OTU1ZmI1NTZhMDM0NWQzZmFkYmE4NGI5NjMzZiIsInN1YiI6IjY0NzQ4ODI3YmUyZDQ5MDBmOTk0ZGEzNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RVHVZBrZirKyzuw79VrketFSS363cr6NcWVSHfdO7yQ',\n        },\n      };\n\n      try {\n        const response = await axios.get(url, options);\n        setMovies(response.data.results);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const searchValue = e.currentTarget.elements.searchValue.value;\n\n    searchValue === ''\n      ? setSearchParams({})\n      : setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <>\n      <h2 className=\"mb-1 p-3 fs-3 fw-bolder\">What do you like to watch?</h2>\n      <form className=\"row g-3 p-3\" onSubmit={onSubmitForm}>\n        <div className=\"col-auto\">\n          <input\n            type=\"text\"\n            name=\"searchValue\"\n            className=\"form-control\"\n            placeholder=\"Movie title input here...\"\n            aria-label=\"Movie title input example\"\n            required\n          />\n        </div>\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-primary mb-3\">\n            Search\n          </button>\n        </div>\n      </form>\n      {movies.length > 0 && (\n        <ul className=\"list-group\">\n          <div className=\"w-100\">\n            {movies.map(movie => (\n              <li key={movie.id} className=\"list-group-item\">\n                <StyledLink\n                  to={`${movie.id}`}\n                  state={{ from: location }}\n                  className=\"list-group-item\"\n                >\n                  {movie.title}\n                </StyledLink>\n              </li>\n            ))}\n          </div>\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchData","url","options","headers","accept","Authorization","axios","response","data","results","console","error","className","onSubmit","e","preventDefault","searchValue","currentTarget","elements","value","type","name","placeholder","required","length","map","movie","to","id","state","from","title"],"sourceRoot":""}